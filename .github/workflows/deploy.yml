# .github/workflows/deploy.yml

name: Deploy OpenLetter to AWS

on:
  push:
    branches:
      - main 

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: SSH and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USER }}
          key: ${{ secrets.AWS_SSH_KEY }}
          script: |
            # Passo 1: Navega para a pasta do projeto e atualiza o código
            echo "Atualizando o repositório do OpenLetter..."
            if [ -d "/home/ubuntu/OpenLetter" ] ; then
              cd /home/ubuntu/OpenLetter
              git pull origin main
            else
              git clone https://github.com/AndreyCortez/OpenLetter.git /home/ubuntu/OpenLetter
            fi

            # Passo 2: Navega para a pasta do backend DENTRO do projeto e cria os arquivos .env
            echo "Criando arquivos de configuração no diretório do projeto..."
            cd /home/ubuntu/OpenLetter/OpenLetterBackend

            # Cria o arquivo .env para o backend Go
            cat <<EOF > ./.env.production
            GO_ENV=production
            DATABASE_URL=${{ secrets.PROD_DATABASE_URL }}
            JWT_SECRET=${{ secrets.PROD_JWT_SECRET }}
            API_PORT=8080
            EOF

            # Cria o arquivo .env para o serviço do banco de dados
            cat <<EOF > ./db.env
            POSTGRES_USER=${{ secrets.PROD_POSTGRES_USER }}
            POSTGRES_PASSWORD=${{ secrets.PROD_POSTGRES_PASSWORD }}
            POSTGRES_DB=openletters
            EOF

            # Passo 3: Volta para a pasta do Docker Compose e executa o deploy
            echo "Iniciando o deploy com Docker Compose..."
            cd /home/ubuntu/AwsDeployAndreyCortez
            docker compose up -d --build --force-recreate --no-deps openletter-db openletter-backend openletter-frontend